import{t as x,c as i,a as t}from"./BBlrOt-4.js";import{f as e,s as a,c as y,n as f,r as b}from"./lpCv0clr.js";import{h as p}from"./DmaXUcs0.js";import{S as V}from"./t-Wps_5z.js";import{C as r,a as z}from"./Db6E_WMG.js";import{S as X}from"./CeqhcXsd.js";var Y=x(`<p>In OCaml, implement a function <!> such that <!> is the <!>-th Lucas number.
On 64-bit platforms, only <!> can be represented as values of type <!>.</p>`),Z=x(`<p>Disregarding the input domain check, a naive implementation of the <!> function would be as follows:</p><!><p>In terms of runtime complexity, this implementation is inefficient since there are duplicate calls to <!> occurring in the computation of <!>.
Space complexity isn't better either since those calls to <!> in <!> are not tail calls, which means that new stack frames are allocated whenever the recursion depth increases.</p><p>To address both issues, we can generalize the problem of finding <!> to the problem of finding <!> when we're given <!> and <!>.
We define a tail-recursive helper function <!> such that <!> is <!> when <!> is <!>, and <!> is <!>.
These extra parameters <!> and <!> act as a memoization mechanism for the latest two Lucas numbers computed.</p><!><p>Alternatively, without using recursion, we would iterate from <!> to <!> and successively compute <!> using mutable references.</p><!>`,1),ss=x("<!> <!>",1);function is(K){var P=ss(),L=e(P);V(L,{children:($,N)=>{var g=Y(),d=a(y(g));r(d,{children:(o,_)=>{var m=i(),h=e(m);p(h,()=>"lucas : int -> int"),t(o,m)}});var j=a(d,2);r(j,{children:(o,_)=>{var m=i(),h=e(m);p(h,()=>"lucas n"),t(o,m)}});var v=a(j,2);p(v,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>');var u=a(v,2);p(u,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">88</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>');var k=a(u,2);r(k,{children:(o,_)=>{var m=i(),h=e(m);p(h,()=>"int"),t(o,m)}}),f(),b(g),t($,g)}});var M=a(L,2);X(M,{children:($,N)=>{var g=Z(),d=e(g),j=a(y(d));r(j,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"lucas"),t(n,s)}}),f(),b(d);var v=a(d);z(v,{code:`let rec lucas : int -> int =
  function
  | 0 -> 2
  | 1 -> 1
  | n -> lucas (n - 1) + lucas (n - 2)
`,language:"ocaml",children:(n,c)=>{var s=i(),l=e(s);p(l,()=>`<span class="hljs-keyword">let</span> <span class="hljs-keyword">rec</span> lucas : <span class="hljs-built_in">int</span> -&gt; <span class="hljs-built_in">int</span> =
  <span class="hljs-keyword">function</span>
  | <span class="hljs-number">0</span> -&gt; <span class="hljs-number">2</span>
  | <span class="hljs-number">1</span> -&gt; <span class="hljs-number">1</span>
  | n -&gt; lucas (n - <span class="hljs-number">1</span>) + lucas (n - <span class="hljs-number">2</span>)
`),t(n,s)},$$slots:{default:!0}});var u=a(v),k=a(y(u));r(k,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"lucas"),t(n,s)}});var o=a(k,2);r(o,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"lucas (n - 1) + lucas (n - 2)"),t(n,s)}});var _=a(o,2);r(_,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"lucas"),t(n,s)}});var m=a(_,2);r(m,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"lucas (n - 1) + lucas (n - 2)"),t(n,s)}}),f(),b(u);var h=a(u),I=a(y(h));p(I,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>');var q=a(I,2);p(q,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>');var S=a(q,2);p(S,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>');var C=a(S,2);p(C,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>');var O=a(C,2);r(O,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"lucas_helper : int -> int -> int -> int"),t(n,s)}});var T=a(O,2);r(T,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"lucas_helper n a b"),t(n,s)}});var A=a(T,2);p(A,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>');var B=a(A,2);r(B,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"a"),t(n,s)}});var D=a(B,2);p(D,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>');var W=a(D,2);r(W,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"b"),t(n,s)}});var E=a(W,2);p(E,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>');var F=a(E,2);r(F,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"a"),t(n,s)}});var Q=a(F,2);r(Q,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"b"),t(n,s)}}),f(),b(h);var G=a(h);z(G,{code:`let lucas : int -> int =
  let rec lucas_helper : int -> int -> int -> int =
    fun n a b ->
      if n = 0 then
        a
      else
        lucas_helper (n - 1) b (a + b)
  in
  fun n ->
    if n < 0 || n > 88 then
      raise (Invalid_argument "lucas")
    else
      lucas_helper n 2 1
`,language:"ocaml",children:(n,c)=>{var s=i(),l=e(s);p(l,()=>`<span class="hljs-keyword">let</span> lucas : <span class="hljs-built_in">int</span> -&gt; <span class="hljs-built_in">int</span> =
  <span class="hljs-keyword">let</span> <span class="hljs-keyword">rec</span> lucas_helper : <span class="hljs-built_in">int</span> -&gt; <span class="hljs-built_in">int</span> -&gt; <span class="hljs-built_in">int</span> -&gt; <span class="hljs-built_in">int</span> =
    <span class="hljs-keyword">fun</span> n a b -&gt;
      <span class="hljs-keyword">if</span> n = <span class="hljs-number">0</span> <span class="hljs-keyword">then</span>
        a
      <span class="hljs-keyword">else</span>
        lucas_helper (n - <span class="hljs-number">1</span>) b (a + b)
  <span class="hljs-keyword">in</span>
  <span class="hljs-keyword">fun</span> n -&gt;
    <span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">0</span> || n &gt; <span class="hljs-number">88</span> <span class="hljs-keyword">then</span>
      raise (<span class="hljs-type">Invalid_argument</span> <span class="hljs-string">&quot;lucas&quot;</span>)
    <span class="hljs-keyword">else</span>
      lucas_helper n <span class="hljs-number">2</span> <span class="hljs-number">1</span>
`),t(n,s)},$$slots:{default:!0}});var w=a(G),H=a(y(w));r(H,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"0"),t(n,s)}});var J=a(H,2);r(J,{children:(n,c)=>{var s=i(),l=e(s);p(l,()=>"n - 1"),t(n,s)}});var R=a(J,2);p(R,()=>'<span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>'),f(),b(w);var U=a(w);z(U,{code:`let lucas : int -> int =
  fun n ->
    if n < 0 || n > 88 then
      raise (Invalid_argument "lucas")
    else
      let i : int ref = ref 0
      and a : int ref = ref 2
      and b : int ref = ref 1
      in
      while !i < n do
        let next : int = !a + !b in
        a := !b;
        b := next;
        i := !i + 1
      done;
      !a
`,language:"ocaml",children:(n,c)=>{var s=i(),l=e(s);p(l,()=>`<span class="hljs-keyword">let</span> lucas : <span class="hljs-built_in">int</span> -&gt; <span class="hljs-built_in">int</span> =
  <span class="hljs-keyword">fun</span> n -&gt;
    <span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">0</span> || n &gt; <span class="hljs-number">88</span> <span class="hljs-keyword">then</span>
      raise (<span class="hljs-type">Invalid_argument</span> <span class="hljs-string">&quot;lucas&quot;</span>)
    <span class="hljs-keyword">else</span>
      <span class="hljs-keyword">let</span> i : <span class="hljs-built_in">int</span> <span class="hljs-built_in">ref</span> = <span class="hljs-built_in">ref</span> <span class="hljs-number">0</span>
      <span class="hljs-keyword">and</span> a : <span class="hljs-built_in">int</span> <span class="hljs-built_in">ref</span> = <span class="hljs-built_in">ref</span> <span class="hljs-number">2</span>
      <span class="hljs-keyword">and</span> b : <span class="hljs-built_in">int</span> <span class="hljs-built_in">ref</span> = <span class="hljs-built_in">ref</span> <span class="hljs-number">1</span>
      <span class="hljs-keyword">in</span>
      <span class="hljs-keyword">while</span> !i &lt; n <span class="hljs-keyword">do</span>
        <span class="hljs-keyword">let</span> next : <span class="hljs-built_in">int</span> = !a + !b <span class="hljs-keyword">in</span>
        a := !b;
        b := next;
        i := !i + <span class="hljs-number">1</span>
      <span class="hljs-keyword">done</span>;
      !a
`),t(n,s)},$$slots:{default:!0}}),t($,g)},$$slots:{default:!0}}),t(K,P)}export{is as default};
