{"type":"data","nodes":[null,null,{"type":"data","data":[{"index":1},[2,13,19,23,30,36,41,45,49,53,57,61],{"title":3,"standalone":4,"tags":5,"uri":12},"Check Matching Brackets in OCaml",true,[6,7,8,9,10,11],"Functional programming","OCaml","Recursion","Stacks","Strings","Tail-recursive","examples/ocaml-check-brackets",{"title":14,"standalone":4,"tags":15,"uri":18},"Computing Real-Valued Vector l2-norm in OCaml",[6,16,17,7],"Higher-order functions","Lists","examples/ocaml-l2-norm",{"title":20,"standalone":4,"tags":21,"uri":22},"Deleting Elements From a List by Indexes in OCaml",[6,17,7,8,11],"examples/ocaml-list-delete-indices-sorted",{"title":24,"standalone":4,"tags":25,"uri":29},"Evaluation of Proposition AST in OCaml",[26,27,6,28,7,8,11],"Abstract syntax tree","Evaluation","Map","examples/ocaml-logic-proposition-ast-evaluation",{"title":31,"standalone":4,"tags":32,"uri":35},"Proving Image Set Equation for Injective Functions",[33,34],"Mathematics","Set theory","examples/proving-image-set-equality-injective-function",{"title":37,"standalone":4,"tags":38,"uri":40},"Proving Length Preservation by List Map",[6,39],"Structural induction","examples/equivalence-length-list-map",{"title":42,"standalone":4,"tags":43,"uri":44},"Proving Structural Equivalence of List Length Computations",[6,39],"examples/structural-equivalence-list-length",{"title":46,"standalone":4,"tags":47,"uri":48},"Proving the Intersection of Sets is Empty",[33,34],"examples/proving-set-intersection-is-empty",{"title":50,"standalone":4,"tags":51,"uri":52},"Tail-Recursive List Mapping Function in OCaml",[6,7,8,11],"examples/ocaml-tail-recursive-list-map",{"title":54,"standalone":4,"tags":55,"uri":56},"Tail-Recursive List Reversal Function in OCaml",[6,7,8,11],"examples/ocaml-tail-recursive-list-rev",{"title":58,"standalone":4,"tags":59,"uri":60},"Tail-Recursive Lucas Sequence Computation in OCaml",[6,7,8,11],"examples/ocaml-lucas-sequence",{"title":62,"standalone":4,"tags":63,"uri":64},"Tail-Recursive Tree Search in OCaml",[6,7,8,11],"examples/ocaml-tail-recursive-tree-search"],"uses":{}}]}
